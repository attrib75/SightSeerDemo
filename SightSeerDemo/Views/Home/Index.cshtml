<title>Sight Seer!</title>
@{ Layout = "~/Views/Shared/_Layout.cshtml";}
@model SightSeerDemo.ViewModels.HomeViewModel

@section Scripts {
    <!-- Add references to the Azure Maps Map control JavaScript and CSS files. -->
    <link rel="stylesheet" href="https://atlas.microsoft.com/sdk/javascript/mapcontrol/2/atlas.min.css" type="text/css" />
    <script src="https://atlas.microsoft.com/sdk/javascript/mapcontrol/2/atlas.min.js"></script>

}

<style>
    /*  web search results link styling   */
    cs-demo-preview-web > a {
        color: yellow;
    }

    .carousel {
        margin-left: 20px;
        width: 220px;
    }

    #myMap {
        width: 100%;
        min-width: 400px;
        height: 600px;
        margin-right: 0px;
        float: right;
        margin-left: 15px;
    }
</style>

<!-- Modal -->
<div class="modal fade" id="ModalCenter" tabindex="-1" role="dialog" aria-labelledby="ModalCenterTitle" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h4>Hey, its a  mashup by <a href="twitter.com/patrickgoode">@($"@PatrickGoode")!</a></h4>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <div class="card-body">

                    This site demonstrates using Azure Maps with the Bing Web Search API from Azure Cognitive Services.
                    In our demo, we're going on a sightseeing tour. The tour stops are displayed on the map. Click next to go to your next tour stop.  As you move
                    through the stops, the app queries the Bing Web Search API to return information about the stop, which includes
                    web results and images. It also highlights the stop on the map
                    Check out the accompanying blog post
                    <a href="http://www.patrickgoode.com">https://www.patrickgoode.com</a>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>
<!-- Outer Most 2 Column -->
<div class="row">
    <!-- Left Column -->
    <div class="col-md-7" style="overflow-y: auto; height: 600px;">
        <!-- Left Column First Row -->

        <div class="row">
            <!-- Tour Stop Info -->
            <div class="col-md-6">

                <div class="row">
                    <div class="col-lg-12">
                        <br />
                        <h2 class="text-bold title" id="tourStopName">
                        </h2>
                        <span id="tourStopAddress"> </span>
                    </div>
                </div>
                <div class="row">

                    <div class="col-md-12">
                        <br />
                        <input type="button" class="btn btn-primary btn-lg" value="Next Stop" id="NextStopBtn" />
                    </div>
                </div>
            </div>
            <div class="col-md-6">

                <!-- Image carousel  -->

                <div id="carouselIndicators" class="carousel slide">
                    <ol class="carousel-indicators" id="indicatorsLITargets">
                        <li data-target="#carouselIndicators" data-slide-to="0" class="active"></li>
                        <li data-target="#carouselIndicators" data-slide-to="1"></li>
                        <li data-target="#carouselIndicators" data-slide-to="2"></li>
                    </ol>
                    <div class="carousel-inner">
                        @*<div class="carousel-item active">
                                <img class="d-block w-100" src="https://loremflickr.com/200/200">
                            </div>*@
                    </div>
                    <!-- Carousel nav -->
                    <a class="carousel-control-prev" href="#carouselIndicators" role="button" data-slide="prev">
                        <span class="carousel-control-prev-icon" aria-hidden="true"></span>
                        <span class="sr-only">Previous</span>
                    </a>
                    <a class="carousel-control-next" href="#carouselIndicators" role="button" data-slide="next">
                        <span class="carousel-control-next-icon" aria-hidden="true"></span>
                        <span class="sr-only">Next</span>
                    </a>
                </div>
            </div>
        </div>

        <hr />

        <!--Web Search Results -->
        <div id="searchResultsDiv">
            <div class="row ">
                @*<div class="cs-demo-preview-web">
                        <div><a href="https://www.foodnetwork.com/recipes/ree-drummond/beef-and-bean-burritos-recipe-1981061" target="_blank" data-event="area-products-demo-clicked-searchresult">Beef and Bean Burritos Recipe | Ree Drummond | Food Network</a></div>
                        <div class="green-webpages-url">https://www.foodnetwork.com/recipes/ree-drummond/beef-and-bean-burritos-recipe-1981061</div>
                        <div>Get Beef and Bean Burritos Recipe from Food Network</div>
                    </div>*@
            </div>
            <br />
        </div>
    </div>
    <!-- Right Column (Map)-->
    <div class="col-md-5">

        <div class="row">
            <div class="text-center" id="spinner" style="margin-bottom: 20px; margin-top: -5px;">
                <div class="spinner-border" role="status">
                    <span class="sr-only">Loading...</span>
                </div>
            </div>
            <div id="myMap"></div>
        </div>
    </div>
</div>

<script type='text/javascript'>

    var map, pin, datasource;
    var CurrentTourStop = 0;
    var TourStops;
    var slider;
    $(document).ready(function () {

        GetTourStops();
        GetMap();
        CurrentTourStop = -1;
        ShowNextTourStopInfo();

    });

    $("#NextStopBtn").click(function () {
        ShowNextTourStopInfo();
    });

    ///////////////////
    // Show tour stops
    ///////////////////
    function ShowNextTourStopInfo() {
        $("#spinner").show();
          CurrentTourStop++;
        //Proceed through the tour stops.  Start over when you reach the end
        if (CurrentTourStop > 4) {
            CurrentTourStop = 0;
        }

        var thisTourStop = TourStops[CurrentTourStop];
        //update display
        $("#tourStopName").text(thisTourStop.name);
        $("#tourStopAddress").text(thisTourStop.address);

        //Get web search results for tour stop

        $.ajax({
            type: "GET",
            async: false,
            url: "Home/GetWebSearchResultsJson",
            data: { searchTerm: thisTourStop.name + ' Chicago' },
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            success: function (result) {
                //Empty the image carousel
                $(".carousel-inner").empty();
                $("#indicatorsLITargets").empty();

                //Empty the web search results
                $("#searchResultsDiv").empty();

                //Update the web search results
                UpdateWebSearchResults(result);

                //Search the Bing Image API specifically for this search term.
                //Resturns better images results
                $.ajax({
                    type: "GET",
                    async: false,
                    url: "Home/GetImageSearchResultsJson",
                    data: { searchTerm: result.queryContext.originalQuery },  //the original query is in the first search result
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    success: function (imageSearchResult) {

                        //Update the image carousel with the image search results
                        UpdateCarousel(imageSearchResult);

                    },
                    failure: function(response) {
                        alert(response.d);
                    }
                })
                    .done(function (response) {
                     $("#spinner").hide();
                    console.log('image search is done!');

                })
            },
            failure: function(response) {
                alert(response.d);
            }
        })
            .done(function (response) {
                    console.log('web search is done!');
            });

        //show the popup for this tour stop on the map
        mapShowPopup(CurrentTourStop);
    }

 function UpdateWebSearchResults(result) {
        if (result != null) {
             $.each(result.webPages.value, function (index, searchResult) {

           //<div class="cs-demo-preview-web">
                //<div><a href="https://www.foodnetwork.com/recipes/ree-drummond/beef-and-bean-burritos-recipe-1981061" target="_blank" data-event="area-products-demo-clicked-searchresult">Beef and Bean Burritos Recipe | Ree Drummond | Food Network</a></div>
                //<div class="green-webpages-url">https://www.foodnetwork.com/recipes/ree-drummond/beef-and-bean-burritos-recipe-1981061</div>
                //<div>Get Beef and Bean Burritos Recipe from Food Network</div>
            //</div>

            $("#searchResultsDiv").append(  '' +
                '<div class="cs-demo-preview-web">' +
                    '<div><a style="font-size: large;" href="'+ searchResult.url +'" target="_blank" data-event="area-products-demo-clicked-searchresult">'+ searchResult.name  +'</a></div>' +
                    '<div class="green-webpages-url">'+ searchResult.url +'</div>' +
                    '<div></div><br />' +
                '</div>');
        });
        }

 }

 //Update the image carousel with search result images
 function UpdateCarousel(imageSearchResult) {
        if (imageSearchResult != null && imageSearchResult.value != null) {
               var gotFirstOne = false; //mechanism to make the first image active
        for (var i = 0; i < imageSearchResult.value.length; i++) {
            var ivalue = imageSearchResult.value[i];
            var activeString = '';
            if (!gotFirstOne) {
                activeString = 'active';
                gotFirstOne = true;
            }
            else {
                activeString = '';
            }
            $(".carousel-inner").append(  '' +
                '<div class="carousel-item '+ activeString +'">' +
                    '<img class="d-block w-200" src="' + ivalue.thumbnailUrl + '" /> ' +
                '</div>');

            $("#indicatorsLITargets").append('<li data-target="#carouselIndicators" data-slide-to="'+ i +'" class="'+ activeString +'"></li>');

        }

        //rebuild the carousel to show the new images
        $('.carousel').carousel('dispose');
        $('.carousel').carousel({
            interval: 2000
        })
        }

    }

 function GetTourStops() {
         $.ajax({
             type: "GET",
            async: false,
            url: "Home/GetTourStopsJson",
            data: '',
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            success: function (result) {
                TourStops  = result;

                $("#tourStopName").text(TourStops[0].name);
                $("#tourStopAddress").text(TourStops[0].address);

            },
            failure: function(response) {
                alert(response.d);
            }
       });
    }

 function GetMap() {
        //Initialize a map instance.
        map = new atlas.Map('myMap', {
            center: [ -87.622519,41.882343],
            zoom: 13,
            view: 'Auto',

            //Add your Azure Maps subscription key to the map SDK. Get an Azure Maps key at https://azure.com/maps
            authOptions: {
                authType: 'subscriptionKey',
                subscriptionKey: '@Model.MapAPIKey'
            }
        });

         @for (int i = 0; i < Model.TourStops.Count ; i++)
        {
            var tourStop = Model.TourStops[i];
             @:showResultsOnMap(@tourStop.LatLong.DLat, @tourStop.LatLong.DLong, '@tourStop.Name', '@tourStop.Address', @i+1)
        }
    }

    function mapShowPopup(CurrentTourStop) {

        for (var i = 0; i < map.markers.getMarkers().length; i++) {
            var marker = map.markers.getMarkers()[i];
            if (i == CurrentTourStop) {
                  marker.togglePopup();
            }
            else {
                if (marker.options.popup) {
                    marker.options.popup.close();
                }
            }
        }

    }

 function showResultsOnMap(lat, dlong, name, address, index) {
        //  map.markers.clear();

        //Create an HTML marker and add it to the map.
        var marker = new atlas.HtmlMarker({
            color: 'DodgerBlue',
            text: index,
            position: [ dlong, lat],
            popup: new atlas.Popup({
                content: ' ' +
                '<div class="col-md-4">' +
                        '<strong>'+ name +'</strong><br>' +
    		        '<address>' +
    			        address + '<br>' +
    			        '<abbr title="Phone">P:</abbr> (+62) 856-1891-791' +
    		        '</address>'+
    	       '</div>',
                pixelOffset: [0, -30]
            })
        });

        map.markers.add(marker);

        //Add a click event to toggle the popup.
        map.events.add('click', marker, () => {
            marker.togglePopup();
        });

    }
</script>